{"componentChunkName":"component---src-templates-blog-template-js","path":"/https://qiita.com/uehaj/items/25caa06ce666fc175d99/index.html","result":{"data":{"site":{"siteMetadata":{"title":"Delog"}},"markdownRemark":{"html":"<p><a href=\"https://yhpg.doorkeeper.jp/\">オフラインリアルタイムどう書く</a>の<a href=\"http://nabetani.sakura.ne.jp/hena/ord27raswi/\">過去問題「分岐と行き止まり」</a>を、Rust(rustc 1.0.0-nightly (2fc8b1e7c 2015-03-07) (built 2015-03-07))で解きました。(他の言語での回答は<a href=\"http://qiita.com/Nabetani/items/23ebddb44f0234e7fb15\">こちら</a>)</p>\n<h1>Rustの感想</h1>\n<ul>\n<li>Rustは関数型プログラミングには向いてない、と思ったが、勘違いだった。<strong>やればできる</strong>。</li>\n<li>やればできるのだが(後述)、iter(),into_iter()とcollect::&#x3C;>()だらけのこれが関数型と呼べるのか、関数型プログラミングの成立条件には、簡潔さというものは必須条件なのではないか? あるいはiter()とcollect()は慣れると見えなくなるのか。</li>\n<li>ただ、ライブラリの作りとしては関数型プログラミングの道具立はそろえられている。<a href=\"http://doc.rust-lang.org/std/iter/trait.IteratorExt.html\">flat_mapしかり、zip, fold, fuse, ..</a>。</li>\n<li>ちなみに、iter(),into_iter()はコレクション(Vec,..)をイテレータに変換、collect()はその逆。</li>\n<li>mapやfilterなどの処理は、イテレータ上で行う(Java8のstreamみたいなもんですね)。</li>\n<li>iter()は繰り返し要素がborrowing(&#x26;, ポインタ参照)でわたってくる。</li>\n<li>into_iterは値渡しで、(Copy traitをderiveしてなければ)ムーブセマンティクス。</li>\n<li>rustcの<strong>エラーメッセージは丁寧ですばらしい</strong>、賞賛すべきレベル。学習者にとっては、このエラーメッセージが死活的に重要。エラーメッセージがこれほど丁寧でなれば、このレベルのプログラムでも絶対書けなかった(断言)。</li>\n<li>今でもRustは<strong>どんどん変更されている</strong>。さすがにbreaking changeの頻度は少なくなっていると思うが、この程度のプログラムでも影響のある変更は結構ある。エラーメッセージがわかりやすくなってたりもするので、できるかぎりnightlyを追うべし。</li>\n</ul>\n<h1>Rustが関数型プログラミングに向いてないと思った理由と、乗り越えるための対策</h1>\n<ul>\n<li>コレクションライブラリが破壊的操作ベース(sort,dedup) </li>\n<li>(対策) → BTreeSetを使う</li>\n<li>文字列操作も同じく破壊的操作ベース。結合するのにpush_str()とか。破壊的以前に煩雑で死ぬ。</li>\n<li>(対策) → format!()マクロを多用。</li>\n<li>式中の関数返り値はその場だけのテンポラリなライフタイムなので、直接・間接に後でも使う場合、ローカル変数に保存してライフタイムで延長することで回避するしかないかと思った。</li>\n<li>(対策) → into_iter()でムーブセマンティクスにすることで回避。<strong>値渡しがRustの基本</strong>であると心に刻む。</li>\n<li>(クロージャにmove接頭辞を付ける(move |a| ..)のも関係がありそうだが、どういうときに使うのだろうか謎)</li>\n<li>collectは多相だが、どんな型を返したいのかを示せる型情報が引数やselfでは与えられないため、多相性の解決を代入先の変数の型で指定するしかないのでは。</li>\n<li>(対策)→collect::&#x3C;Vec&#x3C;String>>()みたいに型アノテーションを使用できる。このとき、「collect::&#x3C;Vec&#x3C;_>>()」のように要素の型は指定しなくても推論されるようだ。</li>\n</ul>\n<h1>コード</h1>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token comment\">/*\nhttp://nabetani.sakura.ne.jp/hena/ord27raswi/\n*/</span>\n<span class=\"token attribute attr-name\">#![feature(collections)]</span>\n<span class=\"token attribute attr-name\">#![feature(core)]</span>\n\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">crate</span> core<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> std<span class=\"token punctuation\">::</span>string<span class=\"token punctuation\">::</span>String<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> std<span class=\"token punctuation\">::</span>collections<span class=\"token punctuation\">::</span>BTreeSet<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> core<span class=\"token punctuation\">::</span>iter<span class=\"token punctuation\">::</span>FromIterator<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> PATHS<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">,</span> char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span>\n    <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'h'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token char string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token char string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'6'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token char string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'f'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token char string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'h'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token char string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token char string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'6'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">fn</span> <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">:</span>char<span class=\"token punctuation\">,</span> stopper<span class=\"token punctuation\">:</span><span class=\"token operator\">&amp;</span>str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> Vec<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> stopper<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">vec!</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> node <span class=\"token operator\">==</span> <span class=\"token char string\">'4'</span> <span class=\"token operator\">||</span> node <span class=\"token operator\">==</span> <span class=\"token char string\">'5'</span> <span class=\"token operator\">||</span> node <span class=\"token operator\">==</span> <span class=\"token char string\">'6'</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">vec!</span><span class=\"token punctuation\">[</span><span class=\"token function\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        PATHS\n            <span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token punctuation\">|</span><span class=\"token operator\">&amp;</span><span class=\"token operator\">&amp;</span>(beg<span class=\"token punctuation\">,</span>_)<span class=\"token punctuation\">|</span></span><span class=\"token punctuation\">{</span>beg<span class=\"token operator\">==</span>node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">flat_map</span><span class=\"token punctuation\">(</span><span class=\"token operator\">|</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">,</span> stopper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">into_iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>stopper<span class=\"token punctuation\">:</span><span class=\"token operator\">&amp;</span>str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> Vec<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    BTreeSet<span class=\"token punctuation\">::</span><span class=\"token function\">from_iter</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span><span class=\"token char string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token char string\">'3'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">flat_map</span><span class=\"token punctuation\">(</span><span class=\"token operator\">|</span>start_point<span class=\"token operator\">|</span>\n                      <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>start_point<span class=\"token punctuation\">,</span> stopper<span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token operator\">|</span>end_point<span class=\"token operator\">|</span> <span class=\"token function\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}{}\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>start_point<span class=\"token punctuation\">,</span> end_point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">.</span>collect<span class=\"token punctuation\">::</span><span class=\"token operator\">&lt;</span>Vec<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">.</span><span class=\"token function\">into_iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">into_iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>collect<span class=\"token punctuation\">::</span><span class=\"token operator\">&lt;</span>Vec<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>stopper<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>str<span class=\"token punctuation\">,</span> expected<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> answer <span class=\"token operator\">=</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>stopper<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token operator\">|</span>s<span class=\"token operator\">|</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">as_slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span>collect<span class=\"token punctuation\">::</span><span class=\"token operator\">&lt;</span>Vec<span class=\"token operator\">&lt;</span><span class=\"token operator\">&amp;</span>str<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> answer <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">{</span>\n        answer <span class=\"token operator\">=</span> String<span class=\"token punctuation\">::</span><span class=\"token function\">from_str</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">assert_eq!</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">,</span> expected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/*0*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"befi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,16,24,26\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*1*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,25,26,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*2*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"de\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,26,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*3*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"fghi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,25,26,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*4*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abcdefghi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*5*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ag\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"24,25,26,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*6*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"dh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*7*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"bf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,25,26\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*8*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,25,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*9*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"be\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,16,24,26,34,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*10*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ci\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,24,25,34,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*11*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"cgi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,24,25,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*12*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"acgi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"24,25,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*13*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"cdefghi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*14*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"acdefghi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*15*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"cdegi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,24,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*16*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"bcdegi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"24\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*17*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"afh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,25,26,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*18*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abfh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,25,26\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*19*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"dfh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*20*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"cdfh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*21*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"deh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*22*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"cdeh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*23*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abefgh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"24,26\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*24*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abdefgh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*25*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"acfghi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"25,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*26*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"acdfghi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*27*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"cegi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,24,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*28*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abcfhi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,25\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*29*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abcefhi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*30*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abdi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*31*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"abdfi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*32*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"bdi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*33*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"bdfi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*34*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"adfh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*35*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"adfgh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*36*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"acdfhi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*37*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"bcdfgi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"24\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*38*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"bcdfghi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*39*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"defi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,24,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*40*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"defhi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14,15,16,34,35,36\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*41*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"cdefg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,24,26,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*42*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"cdefgi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15,24,35\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*43*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"bdefg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"24,26\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token comment\">/*44*/</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"bdefgi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"24\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"January 01, 1970","path":"/https://qiita.com/uehaj/items/25caa06ce666fc175d99/index.html","title":"第27回 オフラインリアルタイムどう書くの問題「分岐と行き止まり」をRustで解く","thumbnail":null,"metaDescription":null}}},"pageContext":{}}}